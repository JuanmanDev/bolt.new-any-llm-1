name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - feature/docker*
      - feature/add-docker*

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    
    # Step 1: Check out the repository
    - name: Check out code
      uses: actions/checkout@v3

    # Step 2: Set up Node.js 20
    - name: Setup pnpm
      uses: pnpm/action-setup@v3 # docs https://pnpm.io/continuous-integration#github-actions
      with:
        version: 8  # Optional: specify a pnpm version

    # Step 3: Install pnpm globally
    - name: Install pnpm
      run: npm install -g pnpm

    # Step 4: Verify pnpm installation (debugging step)
    - name: Verify pnpm version
      run: pnpm --version

    # Step 5: Install dependencies
    - name: Install dependencies
      run: pnpm install

    # Step 6-prod: Build the Docker image using the npm script
    - name: Build Docker image
      if: github.ref == 'refs/heads/main'
      run: pnpm run dockerbuild:prod

    # Step 6-dev: Build the Docker image using the npm script
    - name: Build Docker image
      if: github.ref != 'refs/heads/main'
      run: pnpm run dockerbuild

    # Step 7: Log in to GitHub Container Registry
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Step 8: Push Docker image with branch-specific tags
    - name: Push Docker image with branch-specific tags
      if: github.ref != 'refs/heads/main'
      run: |
        REPO_NAME=$(echo "${{ github.repository }}" | awk -F '/' '{print $2}' | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9._-]/-/g')
        REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
        IMAGE_NAME=ghcr.io/$REPO_OWNER/$REPO_NAME

        # Clean branch name to be docker compatible
        SANITIZED_BRANCH_NAME=$(echo "${{ github.ref_name }}" | sed 's/[^a-zA-Z0-9._-]/-/g')

        docker tag bolt-ai:development $IMAGE_NAME:$SANITIZED_BRANCH_NAME
        docker push $IMAGE_NAME:$SANITIZED_BRANCH_NAME

        # Publish comment inside the PR
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          COMMENT_BODY="Docker image created: \n\n- Image: $IMAGE_NAME:$SANITIZED_BRANCH_NAME"
          echo "$COMMENT_BODY" > comment.txt
          gh pr comment ${{ github.event.pull_request.number }} --body-file comment.txt
        fi

    # Step 9: Push the 'latest' and 'production' tags only for the main branch
    - name: Push 'latest' and 'production' tags for main branch
      if: github.ref == 'refs/heads/main'
      run: |
        REPO_NAME=$(echo "${{ github.repository }}" | awk -F '/' '{print $2}' | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9._-]/-/g')
        REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
        IMAGE_NAME=ghcr.io/$REPO_OWNER/$REPO_NAME

        docker tag bolt-ai:production $IMAGE_NAME:latest
        docker tag bolt-ai:production $IMAGE_NAME:production

        docker push $IMAGE_NAME:latest
        docker push $IMAGE_NAME:production
